From 6f28b1be769c6c2c39acaf487b6348f356f6f544 Mon Sep 17 00:00:00 2001
From: YuanSuyi <tech31@hzdusun.com>
Date: Thu, 5 May 2016 13:45:22 +0800
Subject: [PATCH] fix

---
 build/Makefile             |    2 +
 src/os/linux/rt_flash.c    |  130 ++++++++++++++++++++++++++++++++++++++++++++
 src/os/linux/rt_linux.c    |    4 +-
 src/os/linux/rt_main_dev.c |    5 +-
 4 files changed, 135 insertions(+), 6 deletions(-)
 create mode 100644 src/os/linux/rt_flash.c

diff --git a/build/Makefile b/build/Makefile
index 2bf2d72..8d60c22 100644
--- a/build/Makefile
+++ b/build/Makefile
@@ -10,6 +10,7 @@ SRC_DIR = ../rt2860v2
 obj-$(CONFIG_RT2860V2_AP) += $(DRV_NAME).o
 endif
 
+EXTRA_CFLAGS += -DPRE_ASSIGN_MAC_ADDR -DCONFIG_SUPPORT_OPENWRT
 
 $(DRV_NAME)-objs += $(SRC_DIR)/common/crypt_md5.o
 $(DRV_NAME)-objs += $(SRC_DIR)/common/crypt_sha2.o
@@ -72,6 +73,7 @@ $(DRV_NAME)-objs += $(SRC_DIR)/os/linux/rt_proc.o
 $(DRV_NAME)-objs += $(SRC_DIR)/os/linux/rt_linux.o
 $(DRV_NAME)-objs += $(SRC_DIR)/os/linux/rt_profile.o
 $(DRV_NAME)-objs += $(SRC_DIR)/os/linux/rt_main_dev.o
+$(DRV_NAME)-objs += $(SRC_DIR)/os/linux/rt_flash.o
 $(DRV_NAME)-objs += $(SRC_DIR)/os/linux/ap_ioctl.o
 $(DRV_NAME)-objs += $(SRC_DIR)/os/linux/rt_pci_rbus.o
 $(DRV_NAME)-objs += $(SRC_DIR)/os/linux/rt_rbus_pci_drv.o
diff --git a/src/os/linux/rt_flash.c b/src/os/linux/rt_flash.c
new file mode 100644
index 0000000..0cfb2d6
--- /dev/null
+++ b/src/os/linux/rt_flash.c
@@ -0,0 +1,130 @@
+#include <linux/module.h>
+#include <linux/types.h>
+#include <linux/init.h>
+#include <linux/kernel.h>
+#include <linux/version.h>
+#include <linux/err.h>
+#include <linux/slab.h>
+#include <linux/delay.h>
+#include <linux/sched.h>
+#include <linux/backing-dev.h>
+#include <linux/compat.h>
+#include <linux/mount.h>
+#include <linux/mtd/mtd.h>
+#include <linux/mtd/map.h>
+#include <linux/mtd/concat.h>
+#include <linux/mtd/partitions.h>
+
+struct proc_dir_entry *procRegDir;
+/*
+ * Flash API: ra_mtd_read, ra_mtd_write
+ * Arguments:
+ *   - num: specific the mtd number
+ *   - to/from: the offset to read from or written to
+ *   - len: length
+ *   - buf: data to be read/written
+ * Returns:
+ *   - return -errno if failed
+ *   - return the number of bytes read/written if successed
+ */
+int ra_mtd_write_nm(char *name, loff_t to, size_t len, const u_char *buf)
+{
+	int ret = -1;
+	size_t rdlen, wrlen;
+	struct mtd_info *mtd;
+	struct erase_info ei;
+	u_char *bak = NULL;
+
+	mtd = get_mtd_device_nm(name);
+
+	if (IS_ERR(mtd)) {
+		ret = (int)mtd;
+		goto out;
+	}
+
+	if (len > mtd->erasesize) {
+		put_mtd_device(mtd);
+		ret = -E2BIG;
+		goto out;
+	}
+
+	bak = kzalloc(mtd->erasesize, GFP_KERNEL);
+	if (bak == NULL) {
+		put_mtd_device(mtd);
+		ret = -ENOMEM;
+		goto out;
+	}
+
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(3,3,0)
+	ret = mtd_read(mtd, 0, mtd->erasesize, &rdlen, bak);
+#else
+	ret = mtd->read(mtd, 0, mtd->erasesize, &rdlen, bak);
+#endif
+	if (ret) {
+		goto free_out;
+	}
+
+	if (rdlen != mtd->erasesize)
+		printk("warning: ra_mtd_write_nm: rdlen is not equal to erasesize\n");
+
+	memcpy(bak + to, buf, len);
+
+	ei.mtd = mtd;
+	ei.callback = NULL;
+	ei.addr = 0;
+	ei.len = mtd->erasesize;
+	ei.priv = 0;
+
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(3,3,0)
+	ret = mtd_erase(mtd, &ei);
+#else
+	ret = mtd->erase(mtd, &ei);
+#endif
+	if (ret != 0)
+		goto free_out;
+
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(3,3,0)
+	ret = mtd_write(mtd, 0, mtd->erasesize, &wrlen, bak);
+#else
+	ret = mtd->write(mtd, 0, mtd->erasesize, &wrlen, bak);
+#endif
+
+	udelay(10); /* add delay after write */
+
+free_out:
+	if (mtd)
+		put_mtd_device(mtd);
+
+	if (bak)
+		kfree(bak);
+out:
+	return ret;
+}
+
+int ra_mtd_read_nm(char *name, loff_t from, size_t len, u_char *buf)
+{
+	int ret;
+	size_t rdlen = 0;
+	struct mtd_info *mtd;
+
+	mtd = get_mtd_device_nm(name);
+	if (IS_ERR(mtd))
+		return (int)mtd;
+
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(3,3,0)
+	ret = mtd_read(mtd, from, len, &rdlen, buf);
+#else
+	ret = mtd->read(mtd, from, len, &rdlen, buf);
+#endif
+	if (rdlen != len)
+		printk("warning: ra_mtd_read_nm: rdlen is not equal to len\n");
+
+	put_mtd_device(mtd);
+	return ret;
+}
+
+//EXPORT_SYMBOL(procRegDir);
+
+//MODULE_AUTHOR("Steven Liu <steven_liu@ralinktech.com.tw>");
+//MODULE_DESCRIPTION("Ralink APSoC Flash Map");
+//MODULE_LICENSE("GPL");
diff --git a/src/os/linux/rt_linux.c b/src/os/linux/rt_linux.c
index fdaecf5..7c4a0cd 100644
--- a/src/os/linux/rt_linux.c
+++ b/src/os/linux/rt_linux.c
@@ -321,7 +321,7 @@ void RtmpFlashRead(
 #ifdef RA_MTD_RW_BY_NUM
 	ra_mtd_read(MTD_NUM_FACTORY, 0, (size_t) b, p);
 #else
-	ra_mtd_read_nm("Factory", a&0xFFFF, (size_t) b, p);
+	ra_mtd_read_nm("factory", a&0xFFFF, (size_t) b, p);
 #endif
 #endif /* CONFIG_RALINK_FLASH_API */
 }
@@ -337,7 +337,7 @@ void RtmpFlashWrite(
 #ifdef RA_MTD_RW_BY_NUM
 	ra_mtd_write(MTD_NUM_FACTORY, 0, (size_t) b, p);
 #else
-	ra_mtd_write_nm("Factory", a&0xFFFF, (size_t) b, p);
+	ra_mtd_write_nm("factory", a&0xFFFF, (size_t) b, p);
 #endif
 #endif /* CONFIG_RALINK_FLASH_API */
 }
diff --git a/src/os/linux/rt_main_dev.c b/src/os/linux/rt_main_dev.c
index 68108b3..731456d 100644
--- a/src/os/linux/rt_main_dev.c
+++ b/src/os/linux/rt_main_dev.c
@@ -40,7 +40,7 @@
 #endif
 #endif
 
-
+MODULE_LICENSE("GPL");
 #ifdef CONFIG_APSTA_MIXED_SUPPORT
 /*UINT32 CW_MAX_IN_BITS;*/
 #endif /* CONFIG_APSTA_MIXED_SUPPORT */
@@ -946,6 +946,3 @@ struct net_device_stats *RT28xx_get_wds_ether_stats(
 }
 #endif /* WDS_SUPPORT */
 
-
-
-
-- 
1.7.9.5

